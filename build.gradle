plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
    id("io.micronaut.aot") version "4.0.3"
}

version = "0.1"
group = "mn4graalerr"

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-inject")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor('io.micronaut:micronaut-graal')



    compileOnly("io.micronaut:micronaut-inject-java")


    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.swagger.core.v3:swagger-annotations")


    compileOnly("org.graalvm.nativeimage:svm")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.slf4j:log4j-over-slf4j")

    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("mn4graalerr.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("mn4graalerr.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}


graalvmNative {
    binaries {
        main {
            imageName.set('mn-graalvm-application') 
            buildArgs.add('--verbose') 
        }
    }
}
